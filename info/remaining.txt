2) Statements that evaluate differently left to right and right to left should not be allowed. eg: statements like a = b[j] + j++;
6) Global variables are not allowed as function parameters. 
12) Sections of code should not be commented out. 
13) Inside a comment, the character sequence /* should not be used. 
14) Identifier in an inner scope should not have the same name as an identifier in an outer scope, and hide the identifier in the outer scope. 
15) All functions shall have prototype declarations that are visible at both function definition and function call. 
17) Right-hand operand of shift operator should lie between zero and one less than the width in bits of the left-hand side operand. Eg: x << 9 is not permitted if x is of width 8-bits. 
18) Unary minus operator should not be used on an expression whose type is unsigned. 
19) Numeric variable used in a for loop for controlling loop iterations shall not be modified inside the loop. Eg: for(i=0; i<10; i++) {…..i=i+3; ….} is not allowed. 
20) All if…else if… constructs should be terminated with an else clause. 
21) More than two levels of pointer indirection should not be used. 
22) Unions should not be used. 
23) There shall not be any unreachable code (code which will not be executed under any circumstances and which can be detected at compile-time). 
25) A switch expression should not be effectively Boolean. Eg: switch(x==10) should not be used, as x==10 is effectively Boolean. 
